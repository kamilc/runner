syntax = "proto3";

package service;

service Runner {
  rpc Run(RunRequest) returns (RunResponse) {}
  rpc Stop(StopRequest) returns (StopResponse) {}
  rpc Status(StatusRequest) returns (StatusResponse) {}
  rpc Log(LogRequest) returns (stream LogResponse) {}
}

message GenericError {
  enum Error {
    AUTHORIZATION_ERROR = 0;
    OS_ERROR = 1;
  }
  Error error = 1;
  string description = 2;
}

message RunRequest {
  string command = 1;
  uint32 max_memory = 2;
  uint32 max_cpu = 3;
  uint32 disk_minor = 4;
  uint32 disk_major = 5;
  uint32 max_disk = 6;
  repeated string arguments = 7;
}

message RunResponse {
  string id = 1;

  message RunError {
    enum Error {
      NAME_EMPTY_ERROR = 0;
      ARG_EMPTY_ERROR = 1;
      INVALID_MAX_MEMORY = 2;
      INVALID_MAX_CPU = 3;
      INVALID_DISK_MINOR = 4;
      INVALID_DISK_MAJOR = 5;
      INVALID_MAX_DISK = 6;
    }
    Error error = 1;
    string description = 2;
  }

  GenericError general_error = 2;
  RunError error = 3;
}

message StopRequest {
  string id = 1;
}

message StopResponse {
  message RunError {
    enum Error {
      PROCESS_NOT_FOUND_ERROR = 0;
      PROCESS_ALREADY_STOPPED_ERROR = 1;
      COULDNT_STOP_ERROR = 2;
    }
    Error error = 1;
    string description = 2;
  }

  GenericError general_error = 1;
  RunError error = 2;
}

message StatusRequest {
  string id = 1;
}

message StatusResponse {
  message RunError {
    enum Error {
      PROCESS_NOT_FOUND_ERROR = 0;
    }
    Error error = 1;
    string description = 2;
  }

  enum Status {
    RUNNING = 0;
    STOPPED = 1;
  }

  Status status = 1;
  uint32 exit_code = 2;

  GenericError general_error = 3;
  RunError error = 4;
}

message LogRequest {
  string id = 1;
  enum Descriptor {
    STDOUT = 0;
    STDERR = 1;
  }
  Descriptor descriptor = 2;
}

message LogResponse {
  message RunError {
    enum Error {
      PROCESS_NOT_FOUND_ERROR = 0;
    }
    Error error = 1;
    string description = 2;
  }
  string data = 1;

  GenericError general_error = 2;
  RunError error = 3;
}
